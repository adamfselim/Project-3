{"ast":null,"code":"import _defineProperty from \"/Users/edwardadamfarris/Project-3/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"/Users/edwardadamfarris/Project-3/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/edwardadamfarris/Project-3/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/edwardadamfarris/Project-3/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/edwardadamfarris/Project-3/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/edwardadamfarris/Project-3/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/edwardadamfarris/Project-3/src/components/createEvent/EventFormContainer.js\";\nimport React, { Component } from 'react';\n/* Import Components */\n\nimport Input from '../EventInput/Input';\nimport Button from '../buttons/Button';\nimport \"./EventFormContainer.css\";\nimport API from \"../../utils/API\";\n\nvar EventFormContainer =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(EventFormContainer, _Component);\n\n  function EventFormContainer(props) {\n    var _this;\n\n    _classCallCheck(this, EventFormContainer);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(EventFormContainer).call(this, props));\n\n    _this.handleInputChange = function (event) {\n      var _event$target = event.target,\n          name = _event$target.name,\n          value = _event$target.value;\n\n      _this.setState(_defineProperty({}, name, value));\n    };\n\n    _this.handleFormSubmit = function (event) {\n      event.preventDefault();\n\n      if (_this.state.date && _this.state.start_time && _this.state.street_address) {\n        API.saveEvent({\n          date: _this.state.date,\n          start_time: _this.state.start_time,\n          street_address: _this.state.street_address\n        }).then(function (res) {\n          return _this.loadEvents();\n        }).catch(function (err) {\n          return console.log(err);\n        });\n      }\n    };\n\n    _this.handleClearForm = function (event) {\n      event.preventDefault();\n\n      _this.setState({\n        newEvent: {\n          date: \"\",\n          start_time: \"\",\n          street_address: \"\"\n        }\n      });\n    };\n\n    _this.state = {\n      newEvent: [],\n      date: \"\",\n      start_time: \"\",\n      street_address: \"\"\n    }; // componentDidMount() {\n    //   this.loadEvents();\n    // };\n\n    _this.loadEvents = function () {\n      API.getEvents().then(function (res) {\n        return _this.setState({\n          events: res.data,\n          date: \"\",\n          start_time: \"\",\n          street_address: \"\"\n        });\n      }).catch(function (err) {\n        return console.log(err);\n      });\n    }; // this.handleDate = this.handleDate.bind(this);\n    // this.handleStartTime = this.handleStartTime.bind(this);\n    // this.handleStreetAddress = this.handleStreetAddress.bind(this);\n    // this.handleFormSubmit = this.handleFormSubmit.bind(this);\n    // this.handleClearForm = this.handleClearForm.bind(this);\n    // this.handleInputChange = this.handleInputChange.bind(this);\n\n    /* This lifecycle hook gets executed when the component mounts */\n    // handleDate(e) {\n    //   let value = e.target.value;\n    //   this.setState(prevState => ({\n    //     newEvent:\n    //     {\n    //       ...prevState.newEvent, date: value\n    //     }\n    //   }), () => console.log(this.state.newEvent))\n    // };\n    // handleStartTime(e) {\n    //   let value = e.target.value;\n    //   this.setState(prevState => ({\n    //     newEvent:\n    //     {\n    //       ...prevState.newEvent, start_time: value\n    //     }\n    //   }), () => console.log(this.state.newEvent))\n    // };\n    // handleStreetAddress(e) {\n    //   let value = e.target.value;\n    //   this.setState(prevState => ({\n    //     newEvent:\n    //     {\n    //       ...prevState.newEvent, street_address: value\n    //     }\n    //   }), () => console.log(this.state.newEvent))\n    // };\n\n\n    return _this;\n  }\n\n  _createClass(EventFormContainer, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"form\", {\n        className: \"container-fluid\",\n        onSubmit: this.handleFormSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 108\n        },\n        __self: this\n      }, React.createElement(Input, {\n        inputtype: 'text',\n        title: 'Event Date',\n        name: 'date',\n        value: this.state.newEvent.date,\n        placeholder: 'Enter date of event: day/month/year',\n        handlechange: this.handleDate,\n        onChange: this.handleInputChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 110\n        },\n        __self: this\n      }), React.createElement(Input, {\n        inputtype: 'text',\n        name: 'start_time',\n        title: 'Time of Event',\n        value: this.state.newEvent.start_time,\n        placeholder: 'Enter Time of Event:(ex) 9:00am',\n        onChange: this.handleInputChange,\n        handleChange: this.handleStartTime,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 120\n        },\n        __self: this\n      }), \" \", React.createElement(Input, {\n        inputtype: 'text',\n        name: 'street_address',\n        title: 'Location of Event',\n        value: this.state.newEvent.street_address,\n        placeholder: 'Enter Street Address:(ex)1365 W Warner Rd',\n        onChange: this.handleInputChange,\n        handleChange: this.handleStreetAddress,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 128\n        },\n        __self: this\n      }), \" \", React.createElement(Button, {\n        action: this.handleFormSubmit,\n        type: 'primary',\n        title: 'Create Event',\n        style: buttonStyle,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 136\n        },\n        __self: this\n      }), React.createElement(Button, {\n        action: this.handleClearForm,\n        type: 'secondary',\n        title: 'Clear Form',\n        style: buttonStyle,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 143\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return EventFormContainer;\n}(Component);\n\nvar buttonStyle = {\n  margin: '10px 10px 10px 10px'\n};\nexport default EventFormContainer;","map":{"version":3,"sources":["/Users/edwardadamfarris/Project-3/src/components/createEvent/EventFormContainer.js"],"names":["React","Component","Input","Button","API","EventFormContainer","props","handleInputChange","event","target","name","value","setState","handleFormSubmit","preventDefault","state","date","start_time","street_address","saveEvent","then","res","loadEvents","catch","err","console","log","handleClearForm","newEvent","getEvents","events","data","handleDate","handleStartTime","handleStreetAddress","buttonStyle","margin"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\n\n/* Import Components */\nimport Input from '../EventInput/Input';\nimport Button from '../buttons/Button';\nimport \"./EventFormContainer.css\";\nimport API from \"../../utils/API\";\n\nclass EventFormContainer extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      newEvent: [],\n      date: \"\",\n      start_time: \"\",\n      street_address: \"\"\n    };\n\n    // componentDidMount() {\n    //   this.loadEvents();\n    // };\n\n    this.loadEvents = () => {\n      API.getEvents()\n        .then(res =>\n          this.setState({ events: res.data, date: \"\", start_time: \"\", street_address: \"\" })\n        )\n        .catch(err => console.log(err));\n    };\n\n\n    \n    // this.handleDate = this.handleDate.bind(this);\n    // this.handleStartTime = this.handleStartTime.bind(this);\n    // this.handleStreetAddress = this.handleStreetAddress.bind(this);\n    // this.handleFormSubmit = this.handleFormSubmit.bind(this);\n    // this.handleClearForm = this.handleClearForm.bind(this);\n    // this.handleInputChange = this.handleInputChange.bind(this);\n\n\n    /* This lifecycle hook gets executed when the component mounts */\n\n    // handleDate(e) {\n    //   let value = e.target.value;\n    //   this.setState(prevState => ({\n    //     newEvent:\n    //     {\n    //       ...prevState.newEvent, date: value\n    //     }\n    //   }), () => console.log(this.state.newEvent))\n    // };\n\n    // handleStartTime(e) {\n    //   let value = e.target.value;\n    //   this.setState(prevState => ({\n    //     newEvent:\n    //     {\n    //       ...prevState.newEvent, start_time: value\n    //     }\n    //   }), () => console.log(this.state.newEvent))\n    // };\n\n    // handleStreetAddress(e) {\n    //   let value = e.target.value;\n    //   this.setState(prevState => ({\n    //     newEvent:\n    //     {\n    //       ...prevState.newEvent, street_address: value\n    //     }\n    //   }), () => console.log(this.state.newEvent))\n    // };\n  }\n    handleInputChange = event => {\n      const { name, value } = event.target;\n      this.setState({\n        [name]: value\n      });\n    };\n\n    handleFormSubmit = event => {\n      event.preventDefault();\n      if (this.state.date && this.state.start_time && this.state.street_address) {\n        API.saveEvent({\n          date: this.state.date,\n          start_time: this.state.start_time,\n          street_address: this.state.street_address\n        })\n          .then(res => this.loadEvents())\n          .catch(err => console.log(err));\n      }\n    };\n\n    handleClearForm = event => {\n      event.preventDefault();\n      this.setState({\n        newEvent: {\n          date: \"\",\n          start_time: \"\",\n          street_address: \"\"\n        }\n      });\n    };\n\n    render() {\n      return (\n\n        <form className=\"container-fluid\" onSubmit={this.handleFormSubmit}>\n\n          <Input inputtype={'text'}\n            title={'Event Date'}\n            name={'date'}\n            value={this.state.newEvent.date}\n            placeholder={'Enter date of event: day/month/year'}\n            handlechange={this.handleDate}\n            onChange={this.handleInputChange}\n\n          /> \n\n          <Input inputtype={'text'}\n            name={'start_time'}\n            title={'Time of Event'}\n            value={this.state.newEvent.start_time}\n            placeholder={'Enter Time of Event:(ex) 9:00am'}\n            onChange={this.handleInputChange}\n            handleChange={this.handleStartTime} /> {/* time of event */}\n\n          <Input inputtype={'text'}\n            name={'street_address'}\n            title={'Location of Event'}\n            value={this.state.newEvent.street_address}\n            placeholder={'Enter Street Address:(ex)1365 W Warner Rd'}\n            onChange={this.handleInputChange}\n            handleChange={this.handleStreetAddress} /> {/* time of event */}\n\n          <Button\n            action={this.handleFormSubmit}\n            type={'primary'}\n            title={'Create Event'}\n            style={buttonStyle}\n          /> \n\n          <Button\n            action={this.handleClearForm}\n            type={'secondary'}\n            title={'Clear Form'}\n            style={buttonStyle}\n          /> \n\n        </form>\n        \n      );\n    }\n  }\n\n\n  const buttonStyle = {\n    margin: '10px 10px 10px 10px'\n  }\n\n  export default EventFormContainer;"]},"metadata":{},"sourceType":"module"}