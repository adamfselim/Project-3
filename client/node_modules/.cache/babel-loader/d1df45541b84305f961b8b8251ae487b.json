{"ast":null,"code":"import _defineProperty from \"/Users/edwardadamfarris/Project-3/client/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"/Users/edwardadamfarris/Project-3/client/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/edwardadamfarris/Project-3/client/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/edwardadamfarris/Project-3/client/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/edwardadamfarris/Project-3/client/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/edwardadamfarris/Project-3/client/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/edwardadamfarris/Project-3/client/src/components/createEvent/EventFormContainer.js\";\nimport React, { Component } from 'react';\n/* Import Components */\n\nimport Input from '../EventInput/Input';\nimport Button from '../buttons/Button';\nimport \"./EventFormContainer.css\";\nimport API from \"../../utils/API\";\n\nvar EventFormContainer =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(EventFormContainer, _Component);\n\n  function EventFormContainer(props) {\n    var _this;\n\n    _classCallCheck(this, EventFormContainer);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(EventFormContainer).call(this, props));\n\n    _this.handleInputChange = function (event) {\n      var _event$target = event.target,\n          name = _event$target.name,\n          value = _event$target.value;\n\n      _this.setState(_defineProperty({}, name, value));\n    };\n\n    _this.handleFormSubmit = function (event) {\n      event.preventDefault();\n\n      if (_this.state.title && _this.state.date && _this.state.start_time && _this.state.street_address) {\n        API.saveEvent({\n          title: _this.state.title,\n          date: _this.state.date,\n          start_time: _this.state.start_time,\n          street_address: _this.state.street_address\n        }).then(function (res) {\n          return _this.loadEvents();\n        }).catch(function (err) {\n          return console.log(err);\n        });\n      }\n    };\n\n    _this.handleClearForm = function (event) {\n      event.preventDefault();\n\n      _this.setState({\n        newEvent: {\n          title: \"\",\n          date: \"\",\n          start_time: \"\",\n          street_address: \"\"\n        }\n      });\n    };\n\n    _this.state = {\n      newEvent: [],\n      title: \"\",\n      date: \"\",\n      start_time: \"\",\n      street_address: \"\"\n    }; // componentDidMount() {\n    //   this.loadEvents();\n    // };\n\n    _this.loadEvents = function () {\n      API.getEvents().then(function (res) {\n        return _this.setState({\n          events: res.data,\n          title: \"\",\n          date: \"\",\n          start_time: \"\",\n          street_address: \"\"\n        });\n      }).catch(function (err) {\n        return console.log(err);\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(EventFormContainer, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"form\", {\n        className: \"container-fluid\",\n        onSubmit: this.handleFormSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70\n        },\n        __self: this\n      }, React.createElement(Input, {\n        inputtype: 'text',\n        title: 'Event Title',\n        name: 'title',\n        value: this.state.newEvent.title,\n        placeholder: 'Enter the Title of Event',\n        onChange: this.handleInputChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72\n        },\n        __self: this\n      }), React.createElement(Input, {\n        inputtype: 'text',\n        title: 'Event Date',\n        name: 'date',\n        value: this.state.newEvent.date,\n        placeholder: 'Enter date of event: day/month/year',\n        onChange: this.handleInputChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80\n        },\n        __self: this\n      }), React.createElement(Input, {\n        inputtype: 'text',\n        name: 'start_time',\n        title: 'Time of Event',\n        value: this.state.newEvent.start_time,\n        placeholder: 'Enter Time of Event:(ex) 9:00am',\n        onChange: this.handleInputChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88\n        },\n        __self: this\n      }), React.createElement(Input, {\n        inputtype: 'text',\n        name: 'street_address',\n        title: 'Location of Event',\n        value: this.state.newEvent.street_address,\n        placeholder: 'Enter Street Address:(ex)1365 W Warner Rd',\n        onChange: this.handleInputChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96\n        },\n        __self: this\n      }), React.createElement(Button, {\n        action: this.handleFormSubmit,\n        type: 'primary',\n        title: 'Create Event',\n        style: buttonStyle,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104\n        },\n        __self: this\n      }), React.createElement(Button, {\n        action: this.handleClearForm,\n        type: 'secondary',\n        title: 'Clear Form',\n        style: buttonStyle,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 111\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return EventFormContainer;\n}(Component);\n\nvar buttonStyle = {\n  margin: '10px 10px 10px 10px'\n};\nexport default EventFormContainer;","map":{"version":3,"sources":["/Users/edwardadamfarris/Project-3/client/src/components/createEvent/EventFormContainer.js"],"names":["React","Component","Input","Button","API","EventFormContainer","props","handleInputChange","event","target","name","value","setState","handleFormSubmit","preventDefault","state","title","date","start_time","street_address","saveEvent","then","res","loadEvents","catch","err","console","log","handleClearForm","newEvent","getEvents","events","data","buttonStyle","margin"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\n\n/* Import Components */\nimport Input from '../EventInput/Input';\nimport Button from '../buttons/Button';\nimport \"./EventFormContainer.css\";\nimport API from \"../../utils/API\";\n\nclass EventFormContainer extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      newEvent: [],\n      title: \"\",\n      date: \"\",\n      start_time: \"\",\n      street_address: \"\"\n    };\n\n    // componentDidMount() {\n    //   this.loadEvents();\n    // };\n\n    this.loadEvents = () => {\n      API.getEvents()\n        .then(res =>\n          this.setState({ events: res.data, title: \"\", date: \"\", start_time: \"\", street_address: \"\" })\n        )\n        .catch(err => console.log(err));\n    };\n  }\n\n  handleInputChange = event => {\n    const { name, value } = event.target;\n    this.setState({\n      [name]: value\n    });\n  };\n\n  handleFormSubmit = event => {\n    event.preventDefault();\n    if (this.state.title && this.state.date && this.state.start_time && this.state.street_address) {\n      API.saveEvent({\n        title: this.state.title,\n        date: this.state.date,\n        start_time: this.state.start_time,\n        street_address: this.state.street_address\n      })\n        .then(res => this.loadEvents())\n        .catch(err => console.log(err));\n    }\n  };\n\n  handleClearForm = event => {\n    event.preventDefault();\n    this.setState({\n      newEvent: {\n        title: \"\",\n        date: \"\",\n        start_time: \"\",\n        street_address: \"\"\n      }\n    });\n  };\n\n  render() {\n    return (\n\n      <form className=\"container-fluid\" onSubmit={this.handleFormSubmit}>\n\n        <Input inputtype={'text'}\n          title={'Event Title'}\n          name={'title'}\n          value={this.state.newEvent.title}\n          placeholder={'Enter the Title of Event'}\n          onChange={this.handleInputChange}\n        />\n\n        <Input inputtype={'text'}\n          title={'Event Date'}\n          name={'date'}\n          value={this.state.newEvent.date}\n          placeholder={'Enter date of event: day/month/year'}\n          onChange={this.handleInputChange}\n        />\n\n        <Input inputtype={'text'}\n          name={'start_time'}\n          title={'Time of Event'}\n          value={this.state.newEvent.start_time}\n          placeholder={'Enter Time of Event:(ex) 9:00am'}\n          onChange={this.handleInputChange}\n        />\n\n        <Input inputtype={'text'}\n          name={'street_address'}\n          title={'Location of Event'}\n          value={this.state.newEvent.street_address}\n          placeholder={'Enter Street Address:(ex)1365 W Warner Rd'}\n          onChange={this.handleInputChange}\n        />\n\n        <Button\n          action={this.handleFormSubmit}\n          type={'primary'}\n          title={'Create Event'}\n          style={buttonStyle}\n        />\n\n        <Button\n          action={this.handleClearForm}\n          type={'secondary'}\n          title={'Clear Form'}\n          style={buttonStyle}\n        />\n\n      </form>\n\n    );\n  }\n}\n\n\nconst buttonStyle = {\n  margin: '10px 10px 10px 10px'\n}\n\nexport default EventFormContainer;"]},"metadata":{},"sourceType":"module"}